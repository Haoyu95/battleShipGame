#BlueJ class context
comment0.params=
comment0.target=Game()
comment0.text=\n\ Create\ a\ ShipList\ with\ default\ constructor\ for\ both\ player\ and\ computer.\n
comment1.params=playerShips\ computerShips
comment1.target=Game(ShipList,\ ShipList)
comment1.text=\n\ Create\ a\ ShipList\ with\ given\ shiplist\ objects\ for\ both\ player\ and\ computer.\n
comment10.params=gridSize\ noOfShip\ visibility
comment10.target=void\ play(int,\ int,\ boolean)
comment10.text=\n\ The\ method\ to\ continue\ play\ game,first\ player\ make\ a\ guess,\ then\ computer\ make\ a\ guess,if\ the\ ship\ are\ hit,there\ would\ be\n\ score\ awarded.And\ when\ all\ ships\ of\ one\ side\ are\ destoryed,\ another\ side\ wins.Finally\ the\ result\ of\ this\ game\ would\ be\ print\n\ to\ the\ file\ named\ "gameoutcome.txt".\n\ \n\ @param\ gridSize\ The\ width\ and\ height\ of\ the\ grid.\n\ @param\ noOfShip\ The\ number\ of\ the\ ships\ the\ shiplist\ contains.\n\ @param\ visibility\ Whether\ the\ computer\ ships\ are\ visible.\n
comment11.params=s\ gridSize
comment11.target=int\ playerGuess(java.lang.String,\ int)
comment11.text=\n\ The\ method\ to\ ask\ the\ player\ to\ make\ a\ guess\ to\ attack\ the\ ships\ of\ computer\ using\ the\ coordinate\ given\ by\ player,\ and\ there\n\ are\ some\ validations\ implemented.\n\ \n\ @param\ s\ Clarify\ to\ guess\ x\ or\ y\ position.\n\ @param\ gridSize\ The\ width\ and\ height\ of\ the\ grid.\n\ @return\ The\ x\ or\ y\ position\ player\ wish\ to\ attack.\n\ @throws\ Exception\ If\ player's\ input\ isn't\ numberic.\n
comment12.params=s\ gridSize
comment12.target=int\ computerGuess(java.lang.String,\ int)
comment12.text=\n\ The\ method\ to\ ask\ the\ computer\ to\ make\ a\ guess\ to\ attack\ the\ ships\ of\ player\ using\ the\ coordinate\ randomly\ generatred.\n\ \n\ @param\ s\ Clarify\ to\ guess\ x\ or\ y\ position.\n\ @param\ gridSize\ The\ width\ and\ height\ of\ the\ grid.\n\ @return\ The\ x\ or\ y\ position\ computer\ wish\ to\ attack.\n
comment13.params=guessX\ guessY\ playerScore\ gridSize\ noOfShip
comment13.target=int\ playerHit(int,\ int,\ int,\ int,\ int)
comment13.text=\n\ The\ method\ to\ change\ state\ of\ computer\ ships\ if\ player\ make\ a\ correct\ guess,\ then\ print\ out\ message\ if\ any\ ship\ of\ computer\n\ is\ destroyed\ by\ this\ attack.\n\ \n\ @param\ guessX\ The\ x\ position\ player\ want\ to\ attack.\n\ @param\ guessY\ The\ y\ position\ player\ want\ to\ attack.\n\ @param\ gridSize\ The\ width\ and\ height\ of\ the\ grid.\n\ @param\ noOfShip\ The\ number\ of\ the\ ships\ the\ shiplist\ contains.\n\ @param\ playerScore\ The\ current\ score\ of\ player.\n\ @return\ playerScore\ The\ score\ after\ player\ make\ a\ guess.\n
comment14.params=guessx\ guessy\ computerScore\ gridSize\ noOfShip
comment14.target=int\ computerHit(int,\ int,\ int,\ int,\ int)
comment14.text=\n\ The\ method\ to\ change\ state\ of\ player\ ships\ if\ computer\ make\ a\ correct\ guess,\ then\ print\ out\ message\ if\ any\ ship\ of\ player\n\ is\ destroyed\ by\ this\ attack.\n\ \n\ @param\ guessX\ The\ x\ position\ computer\ want\ to\ attack.\n\ @param\ guessY\ The\ y\ position\ computer\ want\ to\ attack.\n\ @param\ gridSize\ The\ width\ and\ height\ of\ the\ grid.\n\ @param\ noOfShip\ The\ number\ of\ the\ ships\ the\ shiplist\ contains.\n\ @param\ computerScore\ The\ current\ score\ of\ computer.\n\ @return\ computerScore\ The\ score\ after\ computer\ make\ a\ guess.\n
comment2.params=playerShips
comment2.target=void\ setPlayerShips(ShipList)
comment2.text=\n\ Set\ the\ shiplist\ of\ player.\n\ @param\ playerShips\ The\ shiplist\ of\ player.\n
comment3.params=
comment3.target=ShipList\ getPlayerShips()
comment3.text=\n\ Get\ the\ shiplist\ of\ player.\n\ @return\ playerShips\ The\ shiplist\ of\ player.\n
comment4.params=computerShips
comment4.target=void\ setComputerShips(ShipList)
comment4.text=\n\ Set\ the\ shiplist\ of\ computer.\n\ @param\ playerShips\ The\ shiplist\ of\ computer.\n
comment5.params=
comment5.target=ShipList\ getComputerShips()
comment5.text=\n\ Get\ the\ shiplist\ of\ computer.\n\ @return\ playerShips\ The\ shiplist\ of\ computer.\n
comment6.params=
comment6.target=void\ start()
comment6.text=\n\ The\ main\ method\ to\ start\ the\ game.It\ would\ display\ the\ settings\ in\ the\ "gamesettings.txt"\ file.\n\ User\ and\ computer\ then\ set\ their\ ships\ and\ game\ begins.\n
comment7.params=gridSize\ noOfShip\ multiHit\ visibility
comment7.target=void\ displaySetting(int,\ int,\ boolean,\ boolean)
comment7.text=\n\ Display\ the\ settings\ in\ the\ "gamesettings.txt"\ file.And\ ask\ user\ to\ enter\ any\ key\ to\ continue.\n\ \n\ @param\ gridSize\ The\ width\ and\ height\ of\ the\ grid.\n\ @param\ noOfShip\ The\ number\ of\ the\ ships\ the\ shiplist\ contains.\n\ @param\ multiHit\ Whether\ it\ needed\ mutiple\ hits\ to\ destory\ a\ ship.\ \n\ @param\ visibility\ Whether\ the\ computer\ ships\ are\ visible.\n
comment8.params=user\ gridSize\ noOfShip\ multiHit
comment8.target=void\ setShip(java.lang.String,\ int,\ int,\ boolean)
comment8.text=\n\ Set\ the\ values\ for\ the\ ships.And\ use\ these\ values\ to\ create\ new\ ships\ then\ add\ then\ to\ the\ shiplist.\n\ \n\ @param\ gridSize\ The\ width\ and\ height\ of\ the\ grid.\n\ @param\ noOfShip\ The\ number\ of\ the\ ships\ the\ shiplist\ contains.\n\ @param\ multiHit\ Whether\ it\ needed\ mutiple\ hits\ to\ destory\ a\ ship.\ \n\ @param\ user\ Whether\ the\ computer\ or\ player.\n
comment9.params=s\ gridSize
comment9.target=int\ setPos(java.lang.String,\ int)
comment9.text=\n\ Set\ the\ values\ for\ the\ ship's\ x/y\ position.And\ there\ are\ some\ validations\ implemented.\n\ \n\ @param\ s\ Clarify\ to\ set\ x\ or\ y\ position.\n\ @param\ gridSize\ The\ width\ and\ height\ of\ the\ grid.\n\ @return\ The\ x\ or\ y\ position\ user\ wish\ to\ assign\ to\ the\ ship.\n\ @throws\ Exception\ If\ user's\ input\ isn't\ numberic.\n
numComments=15
